"use strict";
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.RPCResult = void 0;
const api_1 = require("../api");
const _1 = require("./");
class RPCResult {
    constructor(reqMsgId, body, error) {
        this.CONSTRUCTOR_ID = 0xf35c6d01;
        this.reqMsgId = reqMsgId;
        this.body = body;
        this.error = error;
        this.classType = 'constructor';
    }
    static fromReader(reader) {
        return __awaiter(this, void 0, void 0, function* () {
            const msgId = reader.readLong();
            const innerCode = reader.readInt(false);
            if (innerCode === api_1.Api.RpcError.CONSTRUCTOR_ID) {
                return new RPCResult(msgId, undefined, api_1.Api.RpcError.fromReader(reader));
            }
            if (innerCode === _1.GZIPPacked.CONSTRUCTOR_ID) {
                return new RPCResult(msgId, (yield _1.GZIPPacked.fromReader(reader)).data);
            }
            reader.seek(-4);
            // This reader.read() will read more than necessary, but it's okay.
            // We could make use of MessageContainer's length here, but since
            // it's not necessary we don't need to care about it.
            return new RPCResult(msgId, reader.read(), undefined);
        });
    }
}
exports.RPCResult = RPCResult;
RPCResult.CONSTRUCTOR_ID = 0xf35c6d01;
RPCResult.classType = 'constructor';
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiUlBDUmVzdWx0LmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vZ3JhbWpzL3RsL2NvcmUvUlBDUmVzdWx0LnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7OztBQUFBLGdDQUEyQjtBQUUzQix5QkFBOEI7QUFJOUIsTUFBYSxTQUFTO0lBU2xCLFlBQVksUUFBMkIsRUFBRSxJQUFhLEVBQUUsS0FBb0I7UUFDeEUsSUFBSSxDQUFDLGNBQWMsR0FBRyxVQUFVLENBQUM7UUFDakMsSUFBSSxDQUFDLFFBQVEsR0FBRyxRQUFRLENBQUM7UUFDekIsSUFBSSxDQUFDLElBQUksR0FBRyxJQUFJLENBQUM7UUFDakIsSUFBSSxDQUFDLEtBQUssR0FBRyxLQUFLLENBQUM7UUFDbkIsSUFBSSxDQUFDLFNBQVMsR0FBRyxhQUFhLENBQUE7SUFDbEMsQ0FBQztJQUVELE1BQU0sQ0FBTyxVQUFVLENBQUMsTUFBb0I7O1lBQ3hDLE1BQU0sS0FBSyxHQUFHLE1BQU0sQ0FBQyxRQUFRLEVBQUUsQ0FBQztZQUNoQyxNQUFNLFNBQVMsR0FBRyxNQUFNLENBQUMsT0FBTyxDQUFDLEtBQUssQ0FBQyxDQUFDO1lBQ3hDLElBQUksU0FBUyxLQUFLLFNBQUcsQ0FBQyxRQUFRLENBQUMsY0FBYyxFQUFFO2dCQUMzQyxPQUFPLElBQUksU0FBUyxDQUFDLEtBQUssRUFBRSxTQUFTLEVBQUUsU0FBRyxDQUFDLFFBQVEsQ0FBQyxVQUFVLENBQUMsTUFBTSxDQUFpQixDQUFDLENBQUE7YUFDMUY7WUFDRCxJQUFJLFNBQVMsS0FBSyxhQUFVLENBQUMsY0FBYyxFQUFFO2dCQUN6QyxPQUFPLElBQUksU0FBUyxDQUFDLEtBQUssRUFBRSxDQUFDLE1BQU0sYUFBVSxDQUFDLFVBQVUsQ0FBQyxNQUFNLENBQUMsQ0FBQyxDQUFDLElBQUksQ0FBQyxDQUFBO2FBQzFFO1lBQ0QsTUFBTSxDQUFDLElBQUksQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDO1lBQ2hCLG1FQUFtRTtZQUNuRSxpRUFBaUU7WUFDakUscURBQXFEO1lBQ3JELE9BQU8sSUFBSSxTQUFTLENBQUMsS0FBSyxFQUFFLE1BQU0sQ0FBQyxJQUFJLEVBQUUsRUFBRSxTQUFTLENBQUMsQ0FBQTtRQUN6RCxDQUFDO0tBQUE7O0FBL0JMLDhCQWdDQztBQS9CVSx3QkFBYyxHQUFHLFVBQVUsQ0FBQztBQUM1QixtQkFBUyxHQUFHLGFBQWEsQ0FBQyJ9