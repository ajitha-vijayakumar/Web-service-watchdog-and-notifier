import type { Entity } from "../../define";
import type { TelegramClient } from "../../client/TelegramClient";
import { Api } from "../api";
interface SenderGetterConstructorInterface {
    senderId?: number;
    sender?: Entity;
    inputSender?: Api.TypeInputPeer;
}
export declare class SenderGetter {
    _senderId?: number;
    _sender?: Entity;
    _inputSender?: Api.TypeInputPeer;
    _client?: TelegramClient;
    constructor({ senderId, sender, inputSender }: SenderGetterConstructorInterface);
    static initClass(c: any, { senderId, sender, inputSender }: SenderGetterConstructorInterface): void;
    get sender(): Entity | undefined;
    getSender(): Promise<Entity>;
    get inputSender(): Api.TypeInputPeer | undefined;
    getInputSender(): Promise<Api.TypeInputPeer | undefined>;
    get senderId(): number | undefined;
    _refetchSender(): Promise<void>;
}
export {};
