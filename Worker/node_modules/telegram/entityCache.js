"use strict";
// Which updates have the following fields?
Object.defineProperty(exports, "__esModule", { value: true });
exports.EntityCache = void 0;
const Utils_1 = require("./Utils");
const Helpers_1 = require("./Helpers");
const tl_1 = require("./tl");
class EntityCache {
    constructor() {
        this.cacheMap = new Map();
    }
    add(entities) {
        const temp = [];
        if (!Helpers_1.isArrayLike(entities)) {
            if ('chats' in entities) {
                temp.push(...entities.chats);
            }
            if ('users' in entities) {
                temp.push(...entities.users);
            }
            if ('user' in entities) {
                temp.push(entities.user);
            }
            if (temp.length) {
                entities = temp;
            }
            else {
                return;
            }
        }
        for (const entity of entities) {
            try {
                const pid = Utils_1.getPeerId(entity);
                if (!this.cacheMap.has(pid)) {
                    this.cacheMap.set(pid, Utils_1.getInputPeer(entity));
                }
            }
            catch (e) {
            }
        }
    }
    get(item) {
        if (!(typeof item === 'number') || item < 0) {
            let res;
            try {
                res = this.cacheMap.get(Utils_1.getPeerId(item));
                if (res) {
                    return res;
                }
            }
            catch (e) {
                throw new Error('Invalid key will not have entity');
            }
        }
        for (const cls of [tl_1.Api.PeerUser, tl_1.Api.PeerChat, tl_1.Api.PeerChannel]) {
            // TODO remove these "as"
            const result = this.cacheMap.get(Utils_1.getPeerId(new cls({
                userId: item,
                chatId: item,
                channelId: item
            })));
            if (result) {
                return result;
            }
        }
        throw new Error('No cached entity for the given key');
    }
}
exports.EntityCache = EntityCache;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZW50aXR5Q2FjaGUuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi9ncmFtanMvZW50aXR5Q2FjaGUudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IjtBQUFBLDJDQUEyQzs7O0FBRTNDLG1DQUFrRDtBQUNsRCx1Q0FBcUM7QUFDckMsNkJBQXlCO0FBRXpCLE1BQWEsV0FBVztJQUdwQjtRQUNJLElBQUksQ0FBQyxRQUFRLEdBQUcsSUFBSSxHQUFHLEVBQUUsQ0FBQztJQUM5QixDQUFDO0lBRUQsR0FBRyxDQUFDLFFBQWE7UUFFYixNQUFNLElBQUksR0FBRyxFQUFFLENBQUM7UUFDaEIsSUFBSSxDQUFDLHFCQUFXLENBQUMsUUFBUSxDQUFDLEVBQUU7WUFFeEIsSUFBSSxPQUFPLElBQUksUUFBUSxFQUFFO2dCQUNyQixJQUFJLENBQUMsSUFBSSxDQUFDLEdBQUcsUUFBUSxDQUFDLEtBQUssQ0FBQyxDQUFBO2FBQy9CO1lBQ0QsSUFBSSxPQUFPLElBQUksUUFBUSxFQUFFO2dCQUNyQixJQUFJLENBQUMsSUFBSSxDQUFDLEdBQUcsUUFBUSxDQUFDLEtBQUssQ0FBQyxDQUFBO2FBQy9CO1lBQ0QsSUFBSSxNQUFNLElBQUksUUFBUSxFQUFFO2dCQUNwQixJQUFJLENBQUMsSUFBSSxDQUFDLFFBQVEsQ0FBQyxJQUFJLENBQUMsQ0FBQTthQUMzQjtZQUNELElBQUksSUFBSSxDQUFDLE1BQU0sRUFBRTtnQkFDYixRQUFRLEdBQUcsSUFBSSxDQUFDO2FBQ25CO2lCQUFNO2dCQUNILE9BQU87YUFDVjtTQUNKO1FBQ0QsS0FBSyxNQUFNLE1BQU0sSUFBSSxRQUFRLEVBQUU7WUFDM0IsSUFBSTtnQkFDQSxNQUFNLEdBQUcsR0FBRyxpQkFBUyxDQUFDLE1BQU0sQ0FBQyxDQUFDO2dCQUM5QixJQUFJLENBQUMsSUFBSSxDQUFDLFFBQVEsQ0FBQyxHQUFHLENBQUMsR0FBRyxDQUFDLEVBQUU7b0JBQ3pCLElBQUksQ0FBQyxRQUFRLENBQUMsR0FBRyxDQUFDLEdBQUcsRUFBRSxvQkFBWSxDQUFDLE1BQU0sQ0FBQyxDQUFDLENBQUM7aUJBQ2hEO2FBQ0o7WUFBQyxPQUFPLENBQUMsRUFBRTthQUVYO1NBQ0o7SUFDTCxDQUFDO0lBRUQsR0FBRyxDQUFDLElBQVM7UUFDVCxJQUFJLENBQUMsQ0FBQyxPQUFPLElBQUksS0FBSyxRQUFRLENBQUMsSUFBSSxJQUFJLEdBQUcsQ0FBQyxFQUFFO1lBQ3pDLElBQUksR0FBRyxDQUFDO1lBQ1IsSUFBSTtnQkFDQSxHQUFHLEdBQUcsSUFBSSxDQUFDLFFBQVEsQ0FBQyxHQUFHLENBQUMsaUJBQVMsQ0FBQyxJQUFJLENBQUMsQ0FBQyxDQUFDO2dCQUN6QyxJQUFJLEdBQUcsRUFBRTtvQkFDTCxPQUFPLEdBQUcsQ0FBQztpQkFDZDthQUNKO1lBQUMsT0FBTyxDQUFDLEVBQUU7Z0JBQ1IsTUFBTSxJQUFJLEtBQUssQ0FBQyxrQ0FBa0MsQ0FBQyxDQUFBO2FBQ3REO1NBQ0o7UUFDRCxLQUFLLE1BQU0sR0FBRyxJQUFJLENBQUMsUUFBRyxDQUFDLFFBQVEsRUFBRSxRQUFHLENBQUMsUUFBUSxFQUFFLFFBQUcsQ0FBQyxXQUFXLENBQUMsRUFBRTtZQUM3RCx5QkFBeUI7WUFDekIsTUFBTSxNQUFNLEdBQUcsSUFBSSxDQUFDLFFBQVEsQ0FBQyxHQUFHLENBQUMsaUJBQVMsQ0FBQyxJQUFJLEdBQUcsQ0FBQztnQkFDL0MsTUFBTSxFQUFFLElBQWM7Z0JBQ3RCLE1BQU0sRUFBRSxJQUFjO2dCQUN0QixTQUFTLEVBQUUsSUFBYzthQUM1QixDQUFDLENBQUMsQ0FBQyxDQUFDO1lBQ0wsSUFBSSxNQUFNLEVBQUU7Z0JBQ1IsT0FBTyxNQUFNLENBQUM7YUFDakI7U0FDSjtRQUNELE1BQU0sSUFBSSxLQUFLLENBQUMsb0NBQW9DLENBQUMsQ0FBQztJQUMxRCxDQUFDO0NBR0o7QUFsRUQsa0NBa0VDIn0=