"use strict";
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.EventCommon = exports.EventBuilder = exports._intoIdSet = void 0;
const tl_1 = require("../tl");
const custom_1 = require("../tl/custom");
const Helpers_1 = require("../Helpers");
const __1 = require("../");
function _intoIdSet(client, chats) {
    return __awaiter(this, void 0, void 0, function* () {
        if (chats == undefined) {
            return undefined;
        }
        if (!Helpers_1.isArrayLike(chats)) {
            chats = [chats];
        }
        const result = new Set();
        for (let chat of chats) {
            if (typeof chat == "number") {
                if (chat < 0) {
                    result.add(chat);
                }
                else {
                    result.add(__1.utils.getPeerId(new tl_1.Api.PeerUser({
                        userId: chat,
                    })));
                    result.add(__1.utils.getPeerId(new tl_1.Api.PeerChat({
                        chatId: chat,
                    })));
                    result.add(__1.utils.getPeerId(new tl_1.Api.PeerChannel({
                        channelId: chat,
                    })));
                }
            }
            else if (typeof chat == "object" && chat.SUBCLASS_OF_ID == 0x2d45687) {
                result.add(__1.utils.getPeerId(chat));
            }
            else {
                chat = yield client.getInputEntity(chat);
                if (chat instanceof tl_1.Api.InputPeerSelf) {
                    chat = yield client.getMe(true);
                }
                result.add(__1.utils.getPeerId(chat));
            }
        }
        return Array.from(result);
    });
}
exports._intoIdSet = _intoIdSet;
class EventBuilder {
    constructor({ chats, blacklistChats = true, func }) {
        this.chats = chats;
        this.blacklistChats = blacklistChats;
        this.resolved = false;
        this.func = func;
    }
    build(update, others = null) {
        if (update)
            return update;
    }
    resolve(client) {
        return __awaiter(this, void 0, void 0, function* () {
            if (this.resolved) {
                return;
            }
            yield this._resolve(client);
            this.resolved = true;
        });
    }
    _resolve(client) {
        return __awaiter(this, void 0, void 0, function* () {
            this.chats = yield _intoIdSet(client, this.chats);
        });
    }
    filter(event) {
        if (!this.resolved) {
            return;
        }
        if (this.chats != undefined && event.chatId != undefined) {
            const inside = this.chats.includes(event.chatId);
            if (inside == this.blacklistChats) {
                // If this chat matches but it's a blacklist ignore.
                // If it doesn't match but it's a whitelist ignore.
                return;
            }
        }
        return event;
    }
}
exports.EventBuilder = EventBuilder;
class EventCommon extends custom_1.ChatGetter {
    constructor({ chatPeer = undefined, msgId = undefined, broadcast = undefined }) {
        super({ chatPeer, broadcast });
        this._eventName = "Event";
        this._entities = {};
        this._client = undefined;
        this._messageId = msgId;
        this.originalUpdate = undefined;
    }
    _setClient(client) {
        this._client = client;
    }
    get client() {
        return this._client;
    }
}
exports.EventCommon = EventCommon;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY29tbW9uLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vZ3JhbWpzL2V2ZW50cy9jb21tb24udHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7O0FBQUEsOEJBQTBCO0FBRTFCLHlDQUF3QztBQUl4Qyx3Q0FBdUM7QUFDdkMsMkJBQTBCO0FBRzFCLFNBQXNCLFVBQVUsQ0FBQyxNQUFzQixFQUFFLEtBQTRDOztRQUNqRyxJQUFJLEtBQUssSUFBSSxTQUFTLEVBQUU7WUFDcEIsT0FBTyxTQUFTLENBQUM7U0FDcEI7UUFDRCxJQUFJLENBQUMscUJBQVcsQ0FBQyxLQUFLLENBQUMsRUFBRTtZQUNyQixLQUFLLEdBQUcsQ0FBQyxLQUFLLENBQUMsQ0FBQTtTQUNsQjtRQUNELE1BQU0sTUFBTSxHQUFnQixJQUFJLEdBQUcsRUFBVSxDQUFDO1FBQzlDLEtBQUssSUFBSSxJQUFJLElBQUksS0FBSyxFQUFFO1lBQ3BCLElBQUksT0FBTyxJQUFJLElBQUksUUFBUSxFQUFFO2dCQUN6QixJQUFJLElBQUksR0FBRyxDQUFDLEVBQUU7b0JBQ1YsTUFBTSxDQUFDLEdBQUcsQ0FBQyxJQUFJLENBQUMsQ0FBQztpQkFDcEI7cUJBQU07b0JBQ0gsTUFBTSxDQUFDLEdBQUcsQ0FBQyxTQUFLLENBQUMsU0FBUyxDQUFDLElBQUksUUFBRyxDQUFDLFFBQVEsQ0FBQzt3QkFDeEMsTUFBTSxFQUFFLElBQUk7cUJBQ2YsQ0FBQyxDQUFDLENBQUMsQ0FBQztvQkFDTCxNQUFNLENBQUMsR0FBRyxDQUFDLFNBQUssQ0FBQyxTQUFTLENBQUMsSUFBSSxRQUFHLENBQUMsUUFBUSxDQUFDO3dCQUN4QyxNQUFNLEVBQUUsSUFBSTtxQkFDZixDQUFDLENBQUMsQ0FBQyxDQUFDO29CQUNMLE1BQU0sQ0FBQyxHQUFHLENBQUMsU0FBSyxDQUFDLFNBQVMsQ0FBQyxJQUFJLFFBQUcsQ0FBQyxXQUFXLENBQUM7d0JBQzNDLFNBQVMsRUFBRSxJQUFJO3FCQUNsQixDQUFD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