import { EventBuilder, EventCommon } from "./common";
import type { TelegramClient } from "../client/TelegramClient";
import { Api } from "../tl";
interface RawInterface {
    types?: Function[];
    func?: CallableFunction;
}
export declare class Raw extends EventBuilder {
    private types?;
    constructor({ types, func }: RawInterface);
    resolve(client: TelegramClient): Promise<void>;
    build(update: Api.TypeUpdate, others?: any): Api.TypeUpdate;
    filter(event: EventCommon): any;
}
export {};
