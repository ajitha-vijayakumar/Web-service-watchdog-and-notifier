"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.buildReplyMarkup = void 0;
const tl_1 = require("../tl");
const button_1 = require("../tl/custom/button");
const messageButton_1 = require("../tl/custom/messageButton");
const Helpers_1 = require("../Helpers");
// ButtonMethods
function buildReplyMarkup(buttons, inlineOnly = false) {
    if (buttons == undefined) {
        return undefined;
    }
    if ("SUBCLASS_OF_ID" in buttons) {
        if (buttons.SUBCLASS_OF_ID == 0xe2e10ef2) {
            return buttons;
        }
    }
    if (!Helpers_1.isArrayLike(buttons)) {
        // @ts-ignore
        buttons = [[buttons]];
    }
    else if (!buttons || !Helpers_1.isArrayLike(buttons[0])) {
        // @ts-ignore
        buttons = [buttons];
    }
    let isInline = false;
    let isNormal = false;
    let resize = undefined;
    const singleUse = false;
    const selective = false;
    const rows = [];
    // @ts-ignore
    for (const row of buttons) {
        const current = [];
        for (let button of row) {
            if (button instanceof button_1.Button) {
                if (button.resize != undefined) {
                    resize = button.resize;
                }
                if (button.singleUse != undefined) {
                    resize = button.singleUse;
                }
                if (button.selective != undefined) {
                    resize = button.selective;
                }
                button = button.button;
            }
            else if (button instanceof messageButton_1.MessageButton) {
                button = button.button;
            }
            const inline = button_1.Button._isInline(button);
            if (!isInline && inline) {
                isInline = true;
            }
            if (!isNormal && inline) {
                isNormal = false;
            }
            if (button.SUBCLASS_OF_ID == 0xbad74a3) {
                // 0xbad74a3 == crc32(b'KeyboardButton')
                current.push(button);
            }
        }
        if (current) {
            rows.push(new tl_1.Api.KeyboardButtonRow({
                buttons: current,
            }));
        }
    }
    if (inlineOnly && isNormal) {
        throw new Error('You cannot use non-inline buttons here');
    }
    else if (isInline === isNormal && isNormal) {
        throw new Error('You cannot mix inline with normal buttons');
    }
    else if (isInline) {
        return new tl_1.Api.ReplyInlineMarkup({
            rows: rows
        });
    }
    return new tl_1.Api.ReplyKeyboardMarkup(({
        rows: rows,
        resize: resize,
        singleUse: singleUse,
        selective: selective
    }));
}
exports.buildReplyMarkup = buildReplyMarkup;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYnV0dG9ucy5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uL2dyYW1qcy9jbGllbnQvYnV0dG9ucy50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7QUFBQSw4QkFBMEI7QUFFMUIsZ0RBQTJDO0FBQzNDLDhEQUF5RDtBQUN6RCx3Q0FBdUM7QUFFdkMsZ0JBQWdCO0FBQ2hCLFNBQWdCLGdCQUFnQixDQUFDLE9BQXFGLEVBQUUsYUFBc0IsS0FBSztJQUMvSSxJQUFJLE9BQU8sSUFBSSxTQUFTLEVBQUU7UUFDdEIsT0FBTyxTQUFTLENBQUM7S0FDcEI7SUFDRCxJQUFJLGdCQUFnQixJQUFJLE9BQU8sRUFBRTtRQUM3QixJQUFJLE9BQU8sQ0FBQyxjQUFjLElBQUksVUFBVSxFQUFFO1lBQ3RDLE9BQU8sT0FBTyxDQUFDO1NBQ2xCO0tBQ0o7SUFDRCxJQUFJLENBQUMscUJBQVcsQ0FBQyxPQUFPLENBQUMsRUFBRTtRQUN2QixhQUFhO1FBQ2IsT0FBTyxHQUFHLENBQUMsQ0FBQyxPQUFPLENBQUMsQ0FBQyxDQUFDO0tBQ3pCO1NBQU0sSUFBSSxDQUFDLE9BQU8sSUFBSSxDQUFDLHFCQUFXLENBQUMsT0FBTyxDQUFDLENBQUMsQ0FBQyxDQUFDLEVBQUU7UUFDN0MsYUFBYTtRQUNiLE9BQU8sR0FBRyxDQUFDLE9BQU8sQ0FBQyxDQUFDO0tBQ3ZCO0lBQ0QsSUFBSSxRQUFRLEdBQUcsS0FBSyxDQUFDO0lBQ3JCLElBQUksUUFBUSxHQUFHLEtBQUssQ0FBQztJQUNyQixJQUFJLE1BQU0sR0FBRyxTQUFTLENBQUM7SUFDdkIsTUFBTSxTQUFTLEdBQUcsS0FBSyxDQUFDO0lBQ3hCLE1BQU0sU0FBUyxHQUFHLEtBQUssQ0FBQztJQUV4QixNQUFNLElBQUksR0FBRyxFQUFFLENBQUM7SUFDaEIsYUFBYTtJQUNiLEtBQUssTUFBTSxHQUFHLElBQUksT0FBTyxFQUFFO1FBQ3ZCLE1BQU0sT0FBTyxHQUFHLEVBQUUsQ0FBQztRQUNuQixLQUFLLElBQUksTUFBTSxJQUFJLEdBQUcsRUFBRTtZQUNwQixJQUFJLE1BQU0sWUFBWSxlQUFNLEVBQUU7Z0JBQzFCLElBQUksTUFBTSxDQUFDLE1BQU0sSUFBSSxTQUFTLEVBQUU7b0JBQzVCLE1BQU0sR0FBRyxNQUFNLENBQUMsTUFBTSxDQUFDO2lCQUMxQjtnQkFDRCxJQUFJLE1BQU0sQ0FBQyxTQUFTLElBQUksU0FBUyxFQUFFO29CQUMvQixNQUFNLEdBQUcsTUFBTSxDQUFDLFNBQVMsQ0FBQztpQkFDN0I7Z0JBQ0QsSUFBSSxNQUFNLENBQUMsU0FBUyxJQUFJLFNBQVMsRUFBRTtvQkFDL0IsTUFBTSxHQUFHLE1BQU0sQ0FBQyxTQUFTLENBQUM7aUJBQzdCO2dCQUNELE1BQU0sR0FBRyxNQUFNLENBQUMsTUFBTSxDQUFDO2FBQzFCO2lCQUFNLElBQUksTUFBTSxZQUFZLDZCQUFhLEVBQUU7Z0JBQ3hDLE1BQU0sR0FBRyxNQUFNLENBQUMsTUFBTSxDQUFDO2FBQzFCO1lBQ0QsTUFBTSxNQUFNLEdBQUcsZUFBTSxDQUFDLFNBQVMsQ0FBQyxNQUFNLENBQUMsQ0FBQztZQUN4QyxJQUFJLENBQUMsUUFBUSxJQUFJLE1BQU0sRUFBRTtnQkFDckIsUUFBUSxHQUFHLElBQUksQ0FBQzthQUNuQjtZQUNELElBQUksQ0FBQyxRQUFRLElBQUksTUFBTSxFQUFFO2dCQUNyQixRQUFRLEdBQUcsS0FBSyxDQUFDO2FBQ3BCO1lBQ0QsSUFBSSxNQUFNLENBQUMsY0FBYyxJQUFJLFNBQVMsRUFBRTtnQkFDcEMsd0NBQXdDO2dCQUN4QyxPQUFPLENBQUMsSUFBSSxDQUFDLE1BQU0sQ0FBQyxDQUFDO2FBQ3hCO1NBQ0o7UUFDRCxJQUFJLE9BQU8sRUFBRTtZQUNULElBQUksQ0FBQyxJQUFJLENBQUMsSUFBSSxRQUFHLENBQUMsaUJBQWlCLENBQUM7Z0JBQ2hDLE9BQU8sRUFBRSxPQUFPO2FBQ25CLENBQUMsQ0FBQyxDQUFBO1NBQ047S0FDSjtJQUNELElBQUksVUFBVSxJQUFJLFFBQVEsRUFBRTtRQUN4QixNQUFNLElBQUksS0FBSyxDQUFDLHdDQUF3QyxDQUFDLENBQUM7S0FDN0Q7U0FBTSxJQUFJLFFBQVEsS0FBSyxRQUFRLElBQUksUUFBUSxFQUFFO1FBQzFDLE1BQU0sSUFBSSxLQUFLLENBQUMsMkNBQTJDLENBQUMsQ0FBQztLQUNoRTtTQUFNLElBQUksUUFBUSxFQUFFO1FBQ2pCLE9BQU8sSUFBSSxRQUFHLENBQUMsaUJBQWlCLENBQUM7WUFDN0IsSUFBSSxFQUFFLElBQUk7U0FDYixDQUFDLENBQUE7S0FDTDtJQUNELE9BQU8sSUFBSSxRQUFHLENBQUMsbUJBQW1CLENBQUMsQ0FBQztRQUNoQyxJQUFJLEVBQUUsSUFBSTtRQUNWLE1BQU0sRUFBRSxNQUFNO1FBQ2QsU0FBUyxFQUFFLFNBQVM7UUFDcEIsU0FBUyxFQUFFLFNBQVM7S0FDdkIsQ0FBQyxDQUFDLENBQUE7QUFDUCxDQUFDO0FBMUVELDRDQTBFQyJ9